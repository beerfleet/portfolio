<div id="videotheek">
  <p>
    Dit is de eerste PHP oefening van de cursus. Het betreft een rudimentaire 
    videotheek. De oefeningen zijn gesorteerd op toenemende complexiteit.
    In deze oefening, en in alle volgende zijn de volgende elementen 
    verwerkt: 
  </p>
  <ul>
    <li>Model-View-Controller implementatie</li>
    <li>PHP code</li>
    <li>Foutafhandeling</li>
    <li>MySQL databank</li>
    <li>CSS</li>
    <li>Twig werd gebruikt voor de derde en vierde oefening</li>
  </ul>
  <p>
    De bedoeling is om een aangemelde gebruiker de mogelijkheden te geven om:
  </p>
  <ul>
    <li>Alle films te tonen</li>
    <li>Een DVD te zoeken op nummer</li>
    <li>Een nieuwe filmtitel toe te voegen</li>
    <li>Een exemplaar van een filmtitel toe te voegen</li>
    <li>Een filmtitel te verwijderen</li>
    <li>Een film te verhuren</li>
    <li>Een film terug in te checken</li>
  </ul>
</div>

<div id="frisdrank">
  <p>
    Deze Opdracht hefet een frisdrankautomaat als thema. De bedoeling was om een 
    gebruiksvriendelijke interface te ontwerpen. De gebruiker moet zonder 
    aanmelden kunnen gebruikmaken van de frisdrankautomaat.
  </p>
  <p>
    Er moeten munten kunnen worden ingevoerd aan de hand van vijf knoppen 
    (10 cent tot 2 euro).
  </p>
  <p>
    In de databank worden de frisdrankgegevens opgeslagen, samen met de beschikbare 
    hoeveelheden per drank.
  </p>
  <p>
    Als uitbreiding is er een admin interface voorzien, beveiligd met 
    gebruikersnaam / paswoord. De interface maakt het mogelijk om drank aan te 
    vullen (max. 20 stuks) en om de geldlade leeg te halen.
  </p>
</div>

<div id="broodjes">
  <p>
    Voor deze oefening was de opdracht om een webtoepassing te maken waarmee 
    VDAB PHP cursisten broodjes kunnen bestellen in de kantine. De cursist dient 
    zicht vooraf te registreren bij het systeem en krijgt een gegenereerd 
    wachtwoord via het opgegeven e-mailadres toegestuurd. De cursist kan zich 
    vervolgens aanmelden met het emailadres en paswoord. Indien de cursist het
    wachtwoord kwijt / vergeten is, kan een nieuw wachtwoord worden aangevraagd.
  </p>
  <p>
    Eens de gebruiker aangemeld is, kan hij / zij uit een lijst van types 
    broodjes kiezen, en deze vervolgens -al dan niet- beleggen. Na de bestelling 
    krijgt de gebruiker de totaalprijs te zien, en kan deze bestelling niet meer 
    worden gewijzigd.
  </p>
  <p>
    De kantine moet de bestelling tijdig kunnen doorgeven, dus is het met andere
    woorden mogelijk om tot 09:59 te bestellen. Vanaf 10:00 kan enkel de 
    bestelling worden geraadpleegd. Er is dus enkel 1 bestellng per dag mogelijk.
    Er kunnen echter meerdere broodjes bij 1 enkele order worden besteld.
  </p>
</div>

<div id="bakkerij">
  <p>
    De Bakkerij was mijn eindopdracht voor de PHP module. Door middel van de 
    eindoefening gaat de tutor na of de cursist (ikzelf in dit geval) in staat 
    is de verschillende aangeleerde technieken te combinere tot &eacute;&eacute;n
    groter project. De items die aan bod komen zijn:
  </p>
  <ul>
    <li>Ontwerp van de databank</li>
    <li>Ontwikkeling van een meerlagenarchitectuur (MVC)</li>
    <li>Opmaken van een gebruiksvriendelijke user interface</li>
    <li>Correcte foutafhandeling</li>
    <li>Doctrine classloader</li>
    <li>Twig</li>
  </ul>
  <p>
    Deze oefening lijkt in sommige opzichten op de vorige, wat de opdracht 
    betreft. Het gaat over een bakkerij die haar diensten wil uitbreiden naar 
    het web, zodat klanten op voorhand orders kunen plaatsen, die ze dan later 
    zelf kunnen afhalen.
  </p>
  <p>
    Een klant moet zich dus eerst online registreren, om later te kunnen 
    aanmelden met zijn / haar paswoord. Paswoord kan aanvankelijk niet zelf 
    worden gekozen, maar na het aanmelden is er wel mogelijkheid om klantgegevens
    - waaronder ook het wachtwoord - aan te passen. Enkel e-mailadres is 
    onveranderlijk.
  </p>
  <p>
    Na aanmelding kunnen de klanten verschillende producten aan hun winkelmand 
    toevoegen. Er worden geen promoties gegeven.
  </p>
  <p>
    Wanneer een bestelling wordt geplaatst, krijgt de klant een overzicht te 
    zien van de bestelling. Op dit moment kan de gebruiker nog terug naar de 
    bestelling om eventuele aanpassingen te doen, indien nodig. Zoniet moet de
    klant een datum kiezen waarop de bestelling zal worden opgehaald. Er kan 
    maximum 3 dagen vooruit worden besteld. Er is &eacute;&eacute;n bestelling
    per dag mogelijk, en er kan nooit voor de huidige dag worden besteld.
  </p>
  <p>
    Bestellingen kunnen geannuleerd worden, ten laatste de dag voor de dag 
    waarop de ophaling gebeurt. Een bestelling kan geannuleerd worden in het 
    overzichtscherm van de gemaakte bestelling(en). Gemaakte bestellingen kunnen
    niet meer gewijzigd worden.
  </p>  
  <p>
    De klantgegevens worden in de databank bewaard. Het wachtwoord is 
    ge&euml;ncrypteers met SHA1. Een klant kan ook geblokkeerd worden zodat 
    deze geen bestelling meer kan plaatsen.
  </p>
  <p>
    De laatste correcte aanmelding wordt bijgehouden in een cookie. Het 
    wachtwoord dient wel opnieuw te worden ingegeven.
  </p>
  <p>
    Er is ook een gastenboek voorzien.
  </p>
</div>